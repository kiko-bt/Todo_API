// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Todo.DataLab;

#nullable disable

namespace Todo.DataLab.Migrations
{
    [DbContext(typeof(ToDoDBContext))]
    [Migration("20220212193317_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ToDO.Domain.TodoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedOn = new DateTime(2022, 2, 13, 20, 33, 16, 941, DateTimeKind.Local).AddTicks(9924),
                            IsComplete = true,
                            Name = "Make an order from Asos",
                            Priority = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            AddedOn = new DateTime(2022, 2, 24, 20, 33, 16, 941, DateTimeKind.Local).AddTicks(9955),
                            IsComplete = false,
                            Name = "Implement Web API project",
                            Priority = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            AddedOn = new DateTime(2022, 2, 12, 20, 33, 16, 941, DateTimeKind.Local).AddTicks(9957),
                            IsComplete = true,
                            Name = "Go to gym",
                            Priority = 3,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("ToDO.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TodoId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Hristijan",
                            LastName = "Petrovski",
                            Password = "l|??d$fV???5?	",
                            TodoId = 2,
                            Username = "kiko-bt"
                        });
                });

            modelBuilder.Entity("ToDO.Domain.TodoItem", b =>
                {
                    b.HasOne("ToDO.Domain.User", "User")
                        .WithMany("Todos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ToDO.Domain.User", b =>
                {
                    b.Navigation("Todos");
                });
#pragma warning restore 612, 618
        }
    }
}
